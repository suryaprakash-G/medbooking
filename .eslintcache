[{"/root/webdev/medbooking/medbooking/src/index.js":"1","/root/webdev/medbooking/medbooking/src/pages/appointment.js":"2","/root/webdev/medbooking/medbooking/src/pages/main.js":"3","/root/webdev/medbooking/medbooking/src/pages/patient_form.js":"4","/root/webdev/medbooking/medbooking/src/pages/view_appointment.js":"5","/root/webdev/medbooking/medbooking/src/pages/adminlogin.js":"6","/root/webdev/medbooking/medbooking/src/pages/adminmain.js":"7","/root/webdev/medbooking/medbooking/src/components/history.js":"8","/root/webdev/medbooking/medbooking/src/components/back_btn.js":"9","/root/webdev/medbooking/medbooking/src/components/doc_select.js":"10","/root/webdev/medbooking/medbooking/src/pages/docedit.js":"11"},{"size":1176,"mtime":1611614459541,"results":"12","hashOfConfig":"13"},{"size":16751,"mtime":1615140654410,"results":"14","hashOfConfig":"13"},{"size":8453,"mtime":1614882960660,"results":"15","hashOfConfig":"13"},{"size":7035,"mtime":1614883345511,"results":"16","hashOfConfig":"13"},{"size":3600,"mtime":1614882956136,"results":"17","hashOfConfig":"13"},{"size":3334,"mtime":1615140952531,"results":"18","hashOfConfig":"13"},{"size":13916,"mtime":1615140721706,"results":"19","hashOfConfig":"13"},{"size":86,"mtime":1596016516262,"results":"20","hashOfConfig":"13"},{"size":345,"mtime":1596212097612,"results":"21","hashOfConfig":"13"},{"size":530,"mtime":1607865623632,"results":"22","hashOfConfig":"13"},{"size":4980,"mtime":1614882959544,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qrbmnf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/root/webdev/medbooking/medbooking/src/index.js",[],["51","52"],"/root/webdev/medbooking/medbooking/src/pages/appointment.js",["53","54"],"/root/webdev/medbooking/medbooking/src/pages/main.js",["55"],"import React from 'react';\nimport axios from 'axios';\nimport styles from '../style/main.module.scss';\nimport axiosRetry from 'axios-retry';\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n        mail:'',\n        pass:'',\n        pass2:'',\n        phno:'',\n        addr:'',\n        gen:'Female',\n        passlen:'6',\n        show:'false',\n        lg_loading:false,\n        sg_loading:false,\n        invalid:\"\"\n        }\n        //cant autobind so manually doing it\n        this.loginchk = this.loginchk.bind(this)\n        this.login = this.login.bind(this)\n        this.signup = this.signup.bind(this)\n        this.showlg = this.showlg.bind(this)\n        this.showsgp = this.showsgp.bind(this)\n        this.stoplg = this.stoplg.bind(this);\n        this.stopsg = this.stopsg.bind(this);\n        this.hidebox  = this.hidebox.bind(this)\n        this.c_mail = this.c_mail.bind(this)\n        this.c_pass = this.c_pass.bind(this)\n        this.c_pass2 = this.c_pass2.bind(this)\n        this.c_phone = this.c_phone.bind(this)\n        this.c_gen = this.c_gen.bind(this)\n        this.c_addr = this.c_addr.bind(this)\n        axiosRetry(axios, { retries: 3 });\n      }\n      componentWillMount(){\n          document.addEventListener('mousedown',this.cick)\n      }\n    //check if logged in\n    loginchk(e){ \n        if(this.state.show==='false')\n        {\n            const loggedin = localStorage.getItem(\"user\");\n            if (loggedin!=null) {\n                this.setState({user:loggedin});\n                this.props.history.push('/book');\n            }else{\n                this.showlg();}\n        }\n        else{this.hidebox();}\n        e.preventDefault();\n    } \n    stoplg(){//stop login button load\n        this.setState({lg_loading:false});\n    }stopsg(){//stop signup button load\n        this.setState({sg_loading:false});\n    }\n    login(e){\n        //validating text boxes\n        var valid=true;\n        if(this.state.pass===\"\"){valid=false;\n            this.setState({invalid:\"please enter password\"})}\n        if(this.state.mail===\"\"){valid=false;\n            this.setState({invalid:\"mail empty\"})}\n        if(valid===true){\n        this.setState({lg_loading:true});\n        const user = {\n            mail: this.state.mail,\n            pass: this.state.pass\n          };\n          //sending creds to login\n        axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/login`,  user )\n        .then(res => {\n            this.setState({lg_loading:false});\n          if(res.data===\"loged in\"){\n            localStorage.setItem('user',JSON.stringify(user));\n            this.props.history.push('/book');\n          }else{\n              this.setState({invalid:\"invalid credentials\"});\n          }\n        }).catch(error => {\n            this.stoplg();\n          });\n    }\n    e.preventDefault();\n    }\n    signup(e){\n        var valid=true;\n        if(this.state.addr===\"\"){valid=false;\n            this.setState({invalid:\"address empty\"})}\n        if(this.state.phno===\"\"){valid=false;\n            this.setState({invalid:\"phone number empty\"})}\n        if(this.state.pass2===\"\"){valid=false;\n            this.setState({invalid:\"re-type password\"})}\n        if(this.state.pass===\"\"){valid=false;\n            this.setState({invalid:\"please enter password\"})}\n        if(this.state.mail===\"\"){valid=false;\n            this.setState({invalid:\"mail empty\"})}\n        if(this.state.mail===\"\"){valid=false;\n            this.setState({invalid:\"mail empty\"})}\n        if(valid===true){\n        this.setState({sg_loading:true});\n        axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/signup`,{\n            mail: this.state.mail,\n            pass: this.state.pass,\n            phno: this.state.phno,\n            addr: this.state.addr,\n            gen: this.state.gen,\n          })\n        .then(res => {\n            this.setState({sg_loading:false});\n          if(res.data[\"result\"]===\"signed up\"){\n              alert(\"signed up check mail to verify account\");\n          }\n        }).catch(this.stopsg());\n    }\n        e.preventDefault();\n    }\n\n    //show and hide popup variants\n    showlg(){this.setState({show:'login'});}\n    showsgp(){this.setState({show:'signup'});}\n    hidebox(){this.setState({show:'false'});}\n    //change textbox values\n    c_mail(e){this.setState({ mail: e.currentTarget.value});this.setState({invalid:\"\"});}\n    c_pass(e){this.setState({ pass: e.currentTarget.value});this.setState({invalid:\"\"});}\n    c_pass2(e){this.setState({ pass2: e.currentTarget.value});this.setState({invalid:\"\"});}\n    c_phone(e){this.setState({ phno: e.currentTarget.value});this.setState({invalid:\"\"});}\n    c_addr(e){this.setState({addr:e.currentTarget.value});this.setState({invalid:\"\"});}\n    c_gen(e){this.setState({gen:e.currentTarget.value});this.setState({invalid:\"\"});}\n    render(){\n        return(\n        <div className=\"main-page container-fluid\">\n            surya<br/> \n            \n           {(this.state.show!=='false')?\n            <div id=\"myModal\" className=\"modal modal-login\">\n                <div className=\"modal-content\">\n                    <span className=\"close\" onClick={this.hidebox}>&times;</span>\n                        \n                    <div className=\"con\">\n                        <button  onClick={this.showlg} className=\"buttons \">\n                            <div className={(this.state.show===\"login\")?\"selected container\":\"\"}>Login</div></button>\n                        <button  onClick={this.showsgp} className=\"buttons\">\n                            <div className={(this.state.show===\"signup\")?\"selected container\":\"\"}>Signup</div></button>\n                    </div>\n                    {(this.state.show==='login')?\n                    <form className='flex-container'>\n                            <input value={this.state.mail} onChange={this.c_mail} className=\"mail inputbox\" placeholder=\"Email\" />\n                                <div/>\n                            <input value={this.state.pass} onChange={this.c_pass} type=\"password\" className=\"pass inputbox\" placeholder=\"Password\" />\n                            <div className=\"invalidtxt\">{this.state.invalid}</div>\n                            {this.state.lg_loading?<button className=\"submit\" onClick={this.login} disabled>\n                                                    <span className=\"spinner-border\"></span></button>\n                                                :<button className=\"submit\" onClick={this.login}>Login</button>\n                            }\n                            </form>:\n                    <form className='flex-container'>\n                            <input value={this.state.mail} onChange={this.c_mail}  className=\"mail inputbox\" placeholder=\"Email\" />\n                                <div/>\n                            <input value={this.state.pass} onChange={this.c_pass}  className=\"pass inputbox\" type=\"password\" placeholder=\"Password\" />\n                                <div/>\n                            <input value={this.state.pass2} onChange={this.c_pass2}  className=\"pass2 inputbox\" type=\"password\" placeholder=\"Retype Password\" />\n                                <div/>\n                            <input value={this.state.phno} onChange={this.c_phone} className=\"phno inputbox\" placeholder=\"Phone Number\" />\n                            <input value={this.state.addr} onChange={this.c_addr} className=\"addr inputbox\" placeholder=\"Address\" />\n                            <select ClassName=\"Gen\"  value={this.state.gen} onChange={this.c_gen}>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                            </select>\n                            {this.state.sg_loading?<button className=\"submit\" onClick={this.login} disabled>\n                            <span className=\"spinner-border\"></span></button>\n                            :<button className=\"submit\" onClick={this.signup}>Signup</button>}\n                            </form>\n                }\n                </div>\n            </div>\n        \n        :null\n        }\n            <button className=\"button\"  onClick={this.loginchk}>\n                Book Appointment\n            </button>\n            \n        </div>\n        )\n    }\n}\nexport default Main;\n","/root/webdev/medbooking/medbooking/src/pages/patient_form.js",["56","57"],"import React from 'react';\nimport Calendar from 'react-calendar';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport styles from '../style/patform.module.scss';\nimport calen from '../style/react_calendar.module.scss';\nvar dob=new Date();//date of birth\nconst date=new Date();//current date\nvar timings=[\"9:00\",\"10:00\",\"11:00\",\"12:00\",\"13:00\",\"14:00\",\"15:00\",\"16:00\",\"17:00\",\"18:00\"];//server 24 hr format\nconst time=[\"09:00 am\",\"10:00 am\",\"11:00 am\",\"12:00 pm\",\"01:00 pm\",\"02:00 pm\",\"03:00 pm\",\"04:00 pm\",\"05:00 pm\",\"06:00 pm\"];//12 hr format for displaying\nclass Patient_Form extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            fname:\"\",\n            lname:\"\",\n            dob:\"dd-mm-yy\",\n            gen:'Female',\n            desc:\"\",\n            fnamefl:\"\",\n            lnamefl:\"\",\n            dobfl:\"\",\n            descfl:\"\",\n            showModal: false,\n            bookdate:this.props.location.state.bookdate,\n            booktime:this.props.location.state.booktime,\n            load:false\n        };\n        axiosRetry(axios, { retries: 2 });\n        this.check_login =this.check_login.bind(this);\n        this.check_login();\n        this.stopld=this.stopld.bind(this);\n        this.send_form= this.send_form.bind(this);\n        this.c_fname = this.c_fname.bind(this);\n        this.c_lname = this.c_lname.bind(this);\n        this.c_desc = this.c_desc.bind(this);\n        this.c_dob = this.c_dob.bind(this);\n        this.c_gen= this.c_gen.bind(this);\n        this.verify=this.verify.bind(this);\n      }\n      //login check\n      check_login(){\n        const loggedin = localStorage.getItem(\"user\");\n        if (loggedin==null) {\n            alert(\"please login first\");\n            this.props.history.push('/');\n        }\n      }\n    //value changing function\n    c_fname(e){this.setState({ fname: e.currentTarget.value});\n      this.setState({fnamefl:\"\"})}\n    c_lname(e){this.setState({ lname: e.currentTarget.value});\n      this.setState({lnamefl:\"\"})}\n    c_desc(e){this.setState({ desc: e.currentTarget.value});\n      this.setState({descfl:\"\"})}\n    c_dob(e){\n      var dtxt=e.getDate()+'-'+(e.getMonth()+1)+'-'+e.getFullYear();\n      dob=e;\n      this.setState({dob:dtxt});\n      this.setState({dobfl:\"\"});\n      this.setState({showModal:false});\n    }\n    c_gen(e){this.setState({gen:e.currentTarget.value});}\n    //calander show on click\n    handleClick = () => {\n      if (!this.state.showModal) {\n        document.addEventListener(\"click\", this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener(\"click\", this.handleOutsideClick, false);\n      }\n  \n      this.setState(prevState => ({\n        showModal: !prevState.showModal\n      }));\n    };\n    //from verification\n    verify(){\n        var valid=true;\n        if(this.state.fname===\"\"){valid=false;\n          this.setState({fnamefl:\"please enter first name\"})}\n        if(this.state.lname===\"\"){valid=false;\n          this.setState({lnamefl:\"please enter last name\"})}\n        if(this.state.desc===\"\"){valid=false;\n          this.setState({descfl:\"description required\"})}\n        if(this.state.dob===\"dd-mm-yy\"){valid=false;\n          this.setState({dobfl:\"please select date of birth\"})}\n        if(valid===true){this.send_form()}\n    }\n\n    //send form\n    send_form(){\n      this.setState({load:true});\n      const loggedin = localStorage.getItem(\"user\");\n      const info = {\n        btime:timings[this.props.location.state.booktime],\n        day:this.state.bookdate.getDate(),\n        month:this.state.bookdate.getMonth()+1,\n        year:this.state.bookdate.getFullYear(),\n        doc:this.props.location.state.doc,\n        first_name:this.state.fname,\n        last_name:this.state.lname,\n        dob:this.state.dob,\n        gen:this.state.gen,\n        desc:this.state.desc,\n        umail: JSON.parse(loggedin)[\"mail\"],\n        upass: JSON.parse(loggedin)[\"pass\"],\n      };\n        axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/book`,info).then(res => {\n           if(res.data[\"message\"]!==\"Internal server error\"){\n                    if(res.data===\"booked\"){\n                      alert(\"appointment booked\");\n                      this.props.history.push(\"/book\");\n                    }\n                  }\n              else{\n                alert(\"something went wrong retry please\");\n              }\n        }).catch(error => {\n          this.stopld();\n        });\n    }\n    //stop loading and alert\n    stopld(){\n      alert(\"please try again\");\n      this.setState({load:false});\n  }\n    render(){\n        return(\n        <div>\n            <div className=\"header row\">\n              Patient form\n            </div>\n            <div className=\"bookfor\">{\"booking for \"+this.state.bookdate.getDate()+'-'+(this.state.bookdate.getMonth()+1)+'-'+this.state.bookdate.getFullYear()\n              +\"   (\"+time[parseInt(this.state.booktime)]+\") for doctor \"+this.props.location.state.docname}</div>\n            <div className=\"form\">\n                <input value={this.state.fname} onChange={this.c_fname} className=\"fname\" placeholder=\"first name\" />\n                <div className=\"invalidtxt\">{this.state.fnamefl}</div>\n                <input value={this.state.lname} onChange={this.c_lname} className=\"lname\" placeholder=\"last name\" />\n                <div className=\"invalidtxt\">{this.state.lnamefl}</div>\n                  <div className=\"row\">\n                    <div className=\"datepiktxt\">{this.state.dob}</div>\n                    <button className=\"datepikbtn\" onClick={this.handleClick}>change D.O.B</button>\n                    <div ref={node => {this.node = node;}}>\n                      {this.state.showModal && (\n                          <Calendar\n                            className=\"cal\"\n                            value={dob}\n                            maxDate={date}\n                            onChange={this.c_dob}/>\n                      )}</div>\n                      \n                      <div className=\"hint\">(hint : click calendar title twice to change year)</div>\n                </div>\n                <div className=\"invalidtxt\">{this.state.dobfl}</div>\n                <select className=\"gen\" value={this.state.gen} onChange={this.c_gen}>\n                    <option value=\"female\">female</option>\n                    <option value=\"male\">male</option>\n                    <option value=\"other\">other</option>\n                </select>\n                <input value={this.state.desc} onChange={this.c_desc} className=\"desc\" placeholder=\"description\" />\n                <div className=\"invalidtxt\">{this.state.descfl}</div>\n                {this.state.load?\n                <button className=\"submit patsub\" onClick={this.verify}>\n                  <span className=\"spinner-border spin-white\"></span></button>:\n                  <button className=\"submit patsub\" onClick={this.verify}>submit</button>\n                }\n            </div>\n        </div>)\n    }\n}\n\nexport default Patient_Form;","/root/webdev/medbooking/medbooking/src/pages/view_appointment.js",["58"],"import React from 'react';\nimport axios from 'axios';\nimport styles from '../style/view_appointment.module.scss';\nclass View_Appointment extends React.Component{\n    constructor(props) {\n        super(props);\n        this.check_login();\n        this.state = {\n            date:this.props.location.state.bookdate,\n            time:this.props.location.state.booktime,//24hr format for api sending\n            year:this.props.location.state.year,\n            doc:this.props.location.state.doc,//doctor id\n            docname:this.props.location.state.docname,//doctor name\n            timed:this.props.location.state.timed,//display12 he format\n            gen:\"\",\n            desc:\"\",\n            name:\"\",\n            fname:\"\",\n            lname:\"\",\n            dob:\"\",\n            load:true\n        };\n        console.log(\"recerived: \"+this.state.year);\n    }\n\n    componentDidMount() {\n        this.getappt();\n    }\n    check_login(){\n        const loggedin = localStorage.getItem(\"user\");\n        this.setState({pass:JSON.parse(loggedin)[\"pass\"]});\n        if (loggedin!=null) {\n            this.setState({user:JSON.parse(loggedin)});\n        }\n        else{\n            alert(\"please login first\");\n            this.props.history.push('/');\n        }\n    }\n    getappt(){\n        const loggedin = localStorage.getItem(\"user\");\n        \n        axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/getappt`, {\n            date:this.state.date,\n            time:this.state.timed,\n            year:String(this.state.year),\n            doc:this.state.doc,\n            mail:JSON.parse(loggedin)[\"mail\"],\n            pass:JSON.parse(loggedin)[\"pass\"]\n        }).then(res => {\n            if(res.data[\"message\"]!==\"Internal server error\"){\n                if(res.data===\"no app\"){\n                    alert(\"error on loading appointment\");\n                }\n                else{\n                    console.log(res.data);\n                    this.setState({desc:res.data.desc.S});\n                    this.setState({dob:res.data.dob.S});\n                    this.setState({fname:res.data[\"first name\"].S});\n                    this.setState({lname:res.data[\"last name\"].S});\n                    this.setState({gen:res.data.gen.S});\n                    console.log(res.data);\n                    this.setState({load:false});\n                }\n            }\n        }).catch(error => {\n            alert(\"error loading appointment\");\n            this.props.history.push(\"/book\");\n          });\n    }\n    render(){\n        return(\n        <div className=\"viewappt\">\n        <div className=\"header\">Appointment</div>\n        {this.state.load?\n            <div className=\"spin-cont\"><span className=\"spinner-border spin-pink\"></span></div>:\n            <div className=\"textbox\">\n                <div className=\"x\">date: </div><div className=\"y\">{this.state.date+\"-\"+this.state.year}</div>\n                <div className=\"x\">time: </div><div className=\"y\">{this.state.timed}</div>\n                <div className=\"x\">doctor: </div><div className=\"y\">{this.state.docname}</div>\n                <div className=\"x\">patient name: </div><div className=\"y\">{this.state.fname+\" \"+this.state.lname}</div>\n                <div className=\"x\">gender: </div><div className=\"y\">{this.state.gen}</div>\n                <div className=\"x\">patient d.o.b: </div><div className=\"y\">{this.state.dob}</div>\n                <div className=\"x\">description: </div><div className=\"y\">{this.state.desc}</div>\n            </div>\n        }\n        </div>\n            \n        )\n    }\n}\n\nexport default View_Appointment;","/root/webdev/medbooking/medbooking/src/pages/adminlogin.js",["59","60","61","62","63"],"/root/webdev/medbooking/medbooking/src/pages/adminmain.js",["64","65","66","67"],"/root/webdev/medbooking/medbooking/src/components/history.js",[],"/root/webdev/medbooking/medbooking/src/components/back_btn.js",[],"/root/webdev/medbooking/medbooking/src/components/doc_select.js",[],"/root/webdev/medbooking/medbooking/src/pages/docedit.js",["68","69","70","71"],"import React from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport styles from '../style/doc_edit.module.scss';\nvar uname,pass;\nvar doclist=[{id:\"\",n:\"\"}];//doctor json list with name and id and possible mor in future\nclass Doc_edit extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id:\"\",\n            uname:\"\",\n            pass:\"\",\n            changed:false,\n            editbox:false,\n            load:true\n        };\n        this.check_login=this.check_login.bind(this);\n        this.get_doc=this.get_doc.bind(this);\n        this.listview=this.listview.bind(this);\n        this.edit_men=this.edit_men.bind(this);\n        this.c_uname=this.c_uname.bind(this);\n        this.c_pass=this.c_pass.bind(this); \n        this.get_doc();\n        axiosRetry(axios, { retries: 2 });\n      }\n      c_uname(e){this.setState({uname: e.currentTarget.value});this.setState({changed:true});}\n      c_pass(e){this.setState({pass: e.currentTarget.value});this.setState({changed:true});}\n      //login check\n      check_login(){\n        const loggedin = localStorage.getItem(\"admin\");\n        if (loggedin==null) {\n            alert(\"please login first\");\n            this.props.history.push('/admin');\n        }else{\n            uname=JSON.parse(loggedin)[\"uname\"];\n            pass=JSON.parse(loggedin)[\"pass\"];}\n      }\n      edit_men(id){\n        this.setState({changed:false});\n        this.setState({pass:\"\"});\n        this.setState({id:doclist[id.target.value]['id']})\n        this.setState({uname:doclist[id.target.value]['n']})\n        this.setState({showModal:true})\n      }\n      get_doc(e){\n          this.setState({load:true})\n        axios.get(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/getdoc`,{}).then(res => {\n            //console.log(res.data);\n          if(res.data[\"message\"]!==\"Internal server error\"){\n              doclist=res.data;\n              this.setState({docselect:doclist[0]['id']});\n              this.setState({docname:doclist[0]['n']});\n              this.setState({dclist_load:false});\n          }\n        })\n    }\n    deldoc(e){\n      console.log(\"delete doc \"+e.currentTarget.value);\n      axios.get(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/deldoc`,{}).then(res => {\n          if(res.data[\"message\"]!==\"Internal server error\"){\n              doclist=res.data;\n              this.setState({docselect:doclist[0]['id']});\n              this.setState({docname:doclist[0]['n']});\n              this.setState({dclist_load:false});\n          }\n        })\n    }\n    sendchanges(e){\n      var id=e.target.value;\n      axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/editdoc`,{id:id}).then(res => { \n            if(res.data[\"message\"]!==\"Internal server error\"){\n            alert(\"changes saved\");\n            this.setState({desc_load:false});\n            }\n    })\n    }\n    //rendering list of doctors for editing\n    listview(){\n        return doclist.map((dat, index) => {\n            return <tr className=\"row\"><button className=\"edit\" onClick={this.edit_men} value={index}>{dat['n']}</button></tr>\n        })\n    }get_desc(e){\n        axios.post(`https://bqhdj6kx2j.execute-api.ap-south-1.amazonaws.com/test/getdoc`,{id:e}).then(res => { \n            if(res.data[\"message\"]!==\"Internal server error\"){\n              \n            }\n    })\n    }\n    handleClickbook = () => {\n        if (!this.state.showModal) {\n          document.addEventListener(\"click\", this.handleOutsideClickbook, false);\n        } else {\n          document.removeEventListener(\"click\", this.handleOutsideClickbook, false);\n        }\n    \n        this.setState(prevState => ({\n          showModal: !prevState.showModal\n        }));\n      };\n    \n      handleOutsideClickbook = e => {\n        if (!this.nodebook.contains(e.target)) this.handleClickbook();\n      };\n    render(){\n        return(\n        <div>\n            <div className=\"header row\">\n              doctor management\n            </div>\n            <div ref={nodebook => {this.nodebook = nodebook;}}>\n            {this.state.showModal && (\n              <div>\n              <div>{this.state.id}</div>\n              <img onClick={console.log(\"dp edit\")} className=\"img dp\" src={\"https://d23yysxhlq0p5m.cloudfront.net/dp/\"+this.state.id+\".jpg\"}/>\n              <input value={this.state.uname} onChange={this.c_uname} className=\"inputbox \" placeholder=\"User Name\" />\n              <input value={this.state.pass} onChange={this.c_pass} className=\"inputbox \" placeholder=\"pass\" />\n              <button onClick={this.deldoc} value={this.state.id}>delete</button>\n              <button disabled={!this.state.changed} onClick={this.sendchanges} value={this.state.id}>save changes</button>\n              </div>\n            )}\n            </div>\n            <table className=\"doclst\">\n            {this.listview()}\n            </table>\n        </div>)\n    }\n}\n\nexport default Doc_edit;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":346,"column":17,"nodeType":"82","endLine":346,"endColumn":134},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"83","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":10},{"ruleId":"85","severity":1,"message":"86","line":79,"column":95,"nodeType":"87","messageId":"88","endLine":79,"endColumn":96},{"ruleId":"85","severity":1,"message":"86","line":80,"column":109,"nodeType":"87","messageId":"88","endLine":80,"endColumn":110},{"ruleId":"85","severity":1,"message":"86","line":83,"column":68,"nodeType":"87","messageId":"88","endLine":83,"endColumn":69},{"ruleId":"85","severity":1,"message":"86","line":85,"column":66,"nodeType":"87","messageId":"88","endLine":85,"endColumn":67},{"ruleId":"76","severity":1,"message":"89","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":10},{"ruleId":"76","severity":1,"message":"84","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":10},{"ruleId":"76","severity":1,"message":"83","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":306,"column":13,"nodeType":"82","endLine":306,"endColumn":116},{"ruleId":"76","severity":1,"message":"83","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"90","line":36,"column":13,"nodeType":"78","messageId":"79","endLine":36,"endColumn":18},{"ruleId":"76","severity":1,"message":"91","line":37,"column":13,"nodeType":"78","messageId":"79","endLine":37,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":115,"column":15,"nodeType":"82","endLine":115,"endColumn":144},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'calen' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styles' is defined but never used.","'cx' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'bs' is defined but never used.","'uname' is assigned a value but never used.","'pass' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]